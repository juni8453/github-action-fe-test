name: node workflow                   # Workflow 이름
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code.   # 레포지토리 체크아웃
        uses: actions/checkout@main

      - name: Cache node modules      # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies    # 의존 파일 설치
        run: |
          cd FE
          npm install
          npm install @react-icons/all-files --save

      - name: Build
        run: |
          cd FE
          npm run build

      - name: find dist directory
        run: |
          cd FE
          pwd
          ls -l
          cd dist
          ls -l

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        # dist 파일은 FE 디렉토리 내부에 있으므로 이동해야 한다.
        run: |
          cd FE 
          aws s3 cp dist/ s3://github-action-fe-test-s3 --recursive --region ap-northeast-2

      # 업로드한 s3 파일을 각 CDN 캐시 무효화하여 리프레시 하기
      # AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY 설정이 없다면 자격 증명 오류가 뜬다.
      - name: CloudFront Invalidation
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}

        run: aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths /* --region ap-northeast-2

#        run: aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths /* --region ap-northeast-2

